---
layout: post
title:  "게임 고객 LTV 추정하기"
date:   2020-03-12 18:00:00
categories: Works
author : DANBI
cover:  "/assets/works/mobile_mkt/title_mobile_mkt.jpg"
---



## 배경

일전에 앱 마케팅 분석 소개와 더불어, 데이터센터 내에 다양한 게임 활동 로그를 활용한 고도화된 모바일 마케팅 지표를 [1편](https://danbi-ncsoft.github.io/works/2019/08/06/works-mobile_mkt-1.html)과 [2편](https://danbi-ncsoft.github.io/works/2019/08/19/works-mobile_mkt-2.html)에 걸쳐 소개 드렸었는데요. 오늘은 그 이후에 진행한 작업으로 게임 고객의 LTV 지표를 개선한 내용에 대해 소개 드리려고 합니다. 고객 생애 가치를 의미하는 LTV(Life Time Value)란, 유저가 앱을 사용하는 동안 발생되는 이익을 뜻하며 CLV(Customer Life time Value)라고 표현하기도 합니다. LTV 추정은 정확한 마케팅 효과 측정 측면에서나 게임의 라이프 싸이클 모니터링 관련 측면에서 매우 중요합니다. 저희는 이런 중요성을 인지하고, 이와 관련하여 (1) 등비 수열을 이용한 방식과 (2) 예측 모델을 이용한 방식이라는 크게 두 가지 방식으로 LTV 지표를 제공하고 있었습니다.

(1) 방식은 초반의 단위 기간 당 ARPU와 리텐션이 향후에도 반복된다는 가정을 갖고, 유저의 리텐션을 공비로 하는 등비 수열을 무한 합하여 $$\frac{ARPU}{(1 – 리텐션)}$$와 같이 LTV를 계산하는 방식입니다. 이 방식은 매우 직관적이고 이해하기 쉽지만, 단위 기간 당 ARPU와 리텐션이 일정하다는 가정이 현실과는 잘 맞지 않죠. 

<p align="center">
<img src="/assets/works/mobile_mkt/ltv1.PNG" style="width:9in" />
[그림1] 모델 가정과 맞지 않는 실제 우리 게임의 리텐션과 ARPU 변동성
</p>

(2) 방식은 거래의 최근성(Recency), 빈도(Frequency), 규모(Monatary)와 관련된 피쳐를 이용하여 Random Forest 모델을 적용한 후, 향후 매출을 예측한 지표입니다. 이 방식은 위의 (1) 방식과 같은 가정이 필요없지만, 정확한 예측 모델을 만들기가 어렵습니다. 라벨 데이터 확보나 모델링에 사용할 안정적인 피쳐 선택이 어려울뿐더러 시간이 지남에 따라 예측 모델의 정확도도 점점 떨어지게 됩니다. 

<p align="center">
<img src="/assets/works/mobile_mkt/ltv2.PNG" style="width:6in" />
[그림2] 정확도가 매우 떨어진 RFM 모델의 최근 예측치(파랑)와 실측값(검정)
</p>

## 분석 목표

이렇게 각각의 방식이 가진 단점을 보완하기 위해 여러 가지 방식의 지표를 모두 제공하고 있었는데요. 문제는 각 추정치들이 서로 차이가 커 오히려 사용자에게 혼란을 주고 있었습니다. 따라서 저희는 모든 게임에서 공통적으로 사용할 수 있도록 최대한 일반적인 LTV 추정 방식을 개발해야했습니다. 추가적으로 게임 론칭 후 최소 일주일 이내에 추정치가 나오도록 신속하게 지표를 제공하는 것을 목표로 하고, 시간이 지남에 따라 누적된 정보를 이용해 추정치가 점점 더 정확해지도록 모델링 하였습니다.

이러한 목표 아래에서, ARPU와 리텐션만을 이용하여 LTV를 추정하되 기존 방식보다 더 정교한 기법을 고안하고, 최초 일주일 간의 집계 정보에서부터 신속하게 추정을 시작하여 시간이 지남에 따라 기존 추정치와 새로 쌓이는 정보를 결합하여 추정치를 보완하도록 모델링하였습니다. 리텐션 측정시에는 별도로 이탈 여부를 판단하지 않고 유저들의 일별 접속률을 이용하여 불필요한 시간을 줄였습니다. 



## 상세 기법

위와 같은 문제를 해결하기 위해, 우선은 LTV 측정 방식에 대해 서베이를 진행하였습니다. 몇몇 서베이를 바탕으로 저희 모바일 게임에 적용해 볼 수 있는 부분은 적용해보았고, 이 중에 나왔던 여러 결과들을 정교화하여 저희의 지표 제공 서비스 상황에 맞게 예상 수익을 추정해 보았습니다. (미리 살짝 말씀 드리자면, 개선된 지표는 평생 가치를 예측하는 LTV의 개념보다는 각 기간별 예상 수익을 추정하는 것과 좀 더 가까워, 지표의 명칭도 “예상 수익” 지표로 변경하게 되었습니다!) 

**단위 기간 당 ARPU 추정하기**

ARPU 추정은 사실상 대규모 업데이트 시기와 같은 특정 날짜에 따라서 값의 편차가 매우 컸기 때문에, 아래에서 소개해 드릴 리텐션 추정과 같이 함수 피팅 방식이나 확률 분포를 이용한 방식으로는 추정하기 어려웠습니다. 이렇듯 시점에 따라 값의 변화가 매우 컸던 ARPU의 경우, 이러한 변동성에 강건해질 수 있도록 ARPDAU의 평균을 구하는 방식으로 추정을 대체하였습니다.

<p align="center">
<img src="/assets/works/mobile_mkt/ltv3.PNG" style="width:9in" />
[그림3] 이동평균을 이용하여 ARPU를 추정하면, 일자별 변동성에 강건해짐
</p>

**단위 기간 당 리텐션 추정하기**

리텐션 추정은 함수 피팅 값과 sBG(shifted Beta Geometric) 모델 값을 이용하여 추정하였습니다. 함수 피팅의 경우, 유저의 리텐션과 비슷하게 감소하는 형태를 갖는 분수 함수 개형을 사용합니다. 분수 함수의 파라미터는 Non-linear Least Square 방식을 이용하여 실측값과 분수 함수 피팅 값의 오차가 적어지도록 하는 최적의 값으로 추정합니다. sBG 모델의 경우는 기하/베타 분포를 이용하여 리텐션을 구하는 방식입니다. 확률분포에 의거하여 구하기 때문에 리텐션의 개형을 모르는 상태에서도 사용이 가능합니다. 저희 모바일 게임 기준으로, 함수 피팅 값은 실측값보다 under-fitting 되는 경향이 있었으며 가끔씩 아예 피팅이 안 되는 경우도 발생했고, sBG 모델 값의 경우 실측값보다 over-fitting 되는 경향이 있었기에 두 가지 방식을 모두 사용하여 리텐션을 추정하였습니다. (sBG 모델의 자세한 내용은 Appendix로 추가합니다.)

<p align="center">
<img src="/assets/works/mobile_mkt/ltv4.PNG" style="width:9in" />
[그림3] sBG 모델과 함수 피팅 모델 비교
</p>

**일정 기간 동안의 고객 가치 추정하기**

위에서 추정된 리텐션과 매출을 이용하여, 최종 예상 수익 지표는 다음과 같이 계산합니다!

$$\hat{예상수익} = \hat{매출} \times \sum_{0≤t≤period} \hat{리텐션} $$

이 때, LTV의 의미상 평생 가치를 측정하기 위해서는 리텐션이 0으로 수렴하는 $$t$$ 시점 까지 합 해야 하지만, 수렴하는 곡선이 완만해서 LTV가 지나치게 높게 추정되는 문제가 있었습니다. 애초에 수십년 동안의 누적 가치를 추정하는 것은 의미가 없다고 판단하였고, 실제 사업에서 1년 단위 매출을 추정하는 것이 중요하기 때문에, period를 30/90/180/365일로 나누어 단기/중기/장기 예상 수익 값을 제공하게 하였습니다. (서비스 명칭도 LTV에서 예상 수익으로 변경!) 또한 단순히 하나의 값으로 예상 수익을 추정하기 보다는 리텐션과 매출의 표준 오차를 활용하여 99% 예상 수익 신뢰구간을 계산하여 함께 제공하였습니다. (신뢰구간 세부 계산 식은 Appendix로 추가합니다.)

<p align="center">
<img src="/assets/works/mobile_mkt/ltv5.PNG" style="width:10in" />
[그림4] 개선된 LTV 지표 기획안 일부 발췌
</p>

**추정 모델의 정확도 평가**

예상 수익 추정은 기존 LTV 지표 대비 오차율을 절반 이상 감소시켜 지표의 정확성도 증대시켰습니다. 각기 다른 방식으로 계산된 추정치이기에 180일 추정으로 기준을 통일하여 평균 오차 비율을 $$ \frac{ \|실측치-추정치\| }{실측치} * 100 $$으로 계산하였고, 결과적으로 기존 대비 실측값과의 차이가 50% → 18%로 대폭 감소하였습니다.

<p align="center">
<img src="/assets/works/mobile_mkt/ltv6.png" style="width:4in" />
[그림5] 개선된 방식과 기존 방식의 오차율 비교
</p>

**세그먼트별 추정치  집계**

추가적으로 신규 유저인지 아닌지에 대한 정보 또는 광고매체 유입 여부와 같은 특정 정보와 내부 로직으로 적재되고 있는 유저 세그먼트 정보를 활용하여, 그룹별로 예상 수익을 살펴볼 수 있었습니다. 단순히 전체 유저 리텐션의 평균을 구하는 것 이외에도 그룹별 예상 수익을 구하여 조금 더 활용성 높은 정보를 전달할 수 있었습니다.

## 요약

끝으로 예상 수익 추정 작업 내용을 요약 정리하며 포스팅을 마무리합니다! 

- 데이터
  - 최초 일주일 간의 ARPDAU와 일별 접속률 집계 정보부터 시작
  - 시간이 지남에 따라 기존 추정치와 누적된 데이터를 결합하여 추정치가 점차 보완되도록 함 
  - 유저 세그먼트 정보 활용
- 모델
  - 예상 수익 추정 → ARPU(결제) 추정 + Retention(잔존율) 추정
    - ARPU는 ARPDAU의 평균으로 추정
    - Retention은 함수 피팅과 sBG 방식으로 추정
- 결과
  - 전체 & 세그먼트(신규, 광고매체 등) 별 30/90/180/365일 예상 수익 추정치

## Appendix.

**sBG Model 설명**

- 가정

  - $$Θ$$: 유저의 이탈 확률, $$T=1$$ : 초기 시점

    - $$t$$ 시점에서 유저의 이탈 확률:
      $$
      \begin{aligned}
      P( T=t | Θ ) = Θ \times (1-Θ)^{t-1}
      \end{aligned}
      $$

    - $$t$$ 시점에서 유저의 생존 확률:
      $$
      \begin{aligned}
      S( T=t | Θ ) = (1-Θ)^t
      \end{aligned}
      $$

    - 유저의 이탈 확률 $$Θ$$는 베타 분포를 따름:
      $$
      \begin{aligned}
      f( Θ | α , β ) = \frac{Θ^{α-1} \times (1-Θ)^{β-1}}{Β(α,β)}
      \end{aligned}
      $$
      

- 모델 설명

  - 모든 기간에 대해서 유저의 이탈 확률($$Θ$$)을 구할 수 없기 때문에, $$t$$시점에서의 유저의 이탈확률과 생존확률은 계산이 불가능

  - 따라서 $$Θ$$가 베타분포를 따른다는 가정을 이용하면 $$t$$시점에서의 유저의 이탈 확률과 생존확률은 다음과 같이 나타낼 수 있음
    $$
    \begin{aligned}
    P( T=t | α , β ) = \frac{Β(α+1,β+t-1)}{Β(α,β)}, \ \ \ \ \ 
    S( T=t | α , β ) = \frac{Β(α,β+t)}{Β(α,β)}
    \end{aligned}
    $$

  - $$B(α , β) = Γ(α) * \frac{Γ(β)}{Γ(α+β)}$$ 와$$ Γ(α) = (α-1)!$$ 을 이용하면 유저의 $$t$$시점에서의 이탈확률은 다음과 같이 간단하게 나타낼 수 있음
    $$
    \begin{aligned}
    P(T=1 | α , β ) = \frac{α}{α+β}, \ \ \ \ \ 
    P(T=t | α , β ) = \frac{β + t - 2}{α + β + t - 1} \times P(T=t-1 | α , β ) \ \ \ if \ \ \ t=2,3,4.....
    \end{aligned}
    $$

  - $$t$$시점에서의 유저의 생존 확률을 이용하면 t시점에서의 유저의 잔존 확률은 다음과 같이 정의하며, 잔존 확률은 유저의 생존 확률 계산에 사용
    $$
    \begin{aligned}
    r_t = \frac{S(t)}{S(t-1)} = \frac{β+t-1}{α+β+t-1} , \ \ \ \ \ S(t) = r_t \times S(t-1)
    \end{aligned}
    $$

  - MLE를 사용한 $$α$$ , $$β$$ 추정 방법

    - $$α$$ , $$β$$ 에 대한 우도함수는 다음과 같이 나타냄 

    - $$n_i$$ : $$i$$ 시점에서의 이탈한 유저 수
      $$
      \begin{equation}
      L( α , β | data ) = ∏_{1≤i≤t} P(T=i | α , β )^{n_i} \times S( t | α , β )^{N - ∑_{1≤i≤t^{n_i}}} \\
      LL( α , β | data ) = ∑ n_i \times log( P(T=i | α , β ) ) + (N - ∑ n_i) \times log( S( t | α , β ) ) \\
      \hat{α}, \hat{β} = argmax_{α , β} ( LL( α , β | data ) )
      \end{equation}
      $$

  - $$\hat{α}$$, $$\hat{β}$$를 이용하여 유저의 모든 시점의 생존 확률을 계산하여 Retention 함수로 사용
    $$
    \begin{equation}
    S(T = 1) = \frac{β}{α+β}, \ \ \ \ \ 
    S(T = t) = r_t * S(T = t-1) = \frac{β + t -1}{α + β + t - 1} \times S(T = t-1)
    \end{equation}
    $$

- 참고 자료

  - [HOW TO PROJECT CUSTOMER RETENTION](https://faculty.wharton.upenn.edu/wp-content/uploads/2012/04/Fader_hardie_jim_07.pdf)

**예상 수익 지표 신뢰구간**

- $$σ_{\hat{ARPU}}$$ = ARPU 추정에 사용된 ARPDAU들의 표준 오차
  
- $$n$$ : 표준 오차 계산에 사용된 데이터의 갯수
  
- 리텐션 함수: $$R(t) = Average(s(t) + c(t))$$

  - $$s(t)$$ : shifted Beta Geometric Model
  - $$c(t)$$ : Curve fitting 함수 (분수 함수) $$= \frac{d}{b \times t^a + c} $$
  - $$R(t, date)$$ : 특정 유입일(date)에 유입된 유저의 잔존율 피팅 함수
    - shifted Beta Geometric Model fitting 방식과 Curve fitting 방식의 평균값

- $$σ_{Retention, t} $$ 는 아래와 같이 계산
  $$
  \begin{equation}
  Var(f(t)) = Var( \frac{s(t) + c(t)}{2} ) =\frac{Var(s(t)) + Var(c(t))}{4}\ \ (s(t)와 \ c(t)는 \ 독립), \ \ \ \ \ 
  σ_{Retention, t} = \frac{\sqrt{Var(s(t)) + Var(c(t))}}{2} \\
  Var(R(t)\times\hat{ARPU} ) = Var(R(t)\times Var(\hat{ARPU} ) + Var(R(t)\times[E(\hat{ARPU} )]^2 + Var(\hat{ARPU})\times[E(R(t))]^2 \ \ (R(t)와 \ \hat{ARPU}는 \ 독립) \\
  E(R(t))^2 = \frac{E(c(t))^2+E(s(t))^2}{4} + \frac{E(c(t))\times E(s(t))}{2}
  \end{equation}
  $$

- 따라서 최종 신뢰구간은 아래와 같음
  $$
  (LTV_{lower} , LTV_{upper}) = ( ∑\hat{ARPU} \times R(t) - 2.58 \times \sqrt\frac{Var(R(t))\times \hat{ARPU}}{n} , ∑\hat{ARPU} \times R(t) + 2.58 \times \sqrt\frac{Var(R(t))\times \hat{ARPU}}{n} )
  $$
  

 

