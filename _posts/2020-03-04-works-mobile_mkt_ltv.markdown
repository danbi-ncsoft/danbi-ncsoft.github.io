---
layout: post
title:  "모바일 게임 예상 수익 추정하기"
date:   2020-03-04 18:00:00
categories: Works
author : DANBI
cover:  "/assets/works/mobile_mkt/title_mobile_mkt.jpg"
---

일전에 앱 마케팅 분석 소개와 더불어, 데이터센터 내에 다양한 게임 활동 로그를 활용한 고도화된 모바일 마케팅 지표를 [1편](https://danbi-ncsoft.github.io/works/2019/08/06/works-mobile_mkt-1.html)과 [2편](https://danbi-ncsoft.github.io/works/2019/08/19/works-mobile_mkt-2.html)에 걸쳐 소개 드렸었는데요. 오늘은 그 이후에 진행한 작업으로 모바일 게임 예상 수익 지표를 개선한 내용에 대해 소개 드리려고 합니다. 예상 수익 추정은 정확한 마케팅 효과 측정 측면에서나 게임의 라이프 싸이클 모니터링 관련 측면에서 매우 중요합니다. 사실 저희는 이러한 중요성을 인지하고, 이미 이와 관련하여 (1)무한등비급수 방식으로 계산한 LTV와 (2)RFM 피쳐로 예측한 LTV라는 크게 두 가지 방식으로 고객생애가치(LTV) 지표를 제공하고 있었습니다.

먼저 이 두 가지 기존 지표에 대해 간단히 소개 드리겠습니다. (1) 방식은 초반의 잔존율과 매출이 향후에도 반복된다는 가정을 갖고 무한등비급수 계산식인 ARPU / (1 - 리텐션) 으로 평생가치를 계산한 것입니다. (2) 방식은 거래의 최근성(Recency), 빈도(Frequency), 규모(Monatary)와 관련된 피쳐를 이용하여 Random Forest 모델을 적용하여 향후 매출을 예측한 지표입니다. 두 방식 모두 7일 LTV와 30일 LTV를 각각 제공하였는데, 문제는 두 방식이 예측하는 값이 상이하고, 어떤 지표를 봐야 할지 정보가 불확실하였다는 것입니다. (1) 방식의 경우에도 7일, 30일 방식 모두 평생 가치를 예측하지만 그 값이 서로 다른 문제가 있었고, (2) 방식은 7일 매출, 30일 매출을 예측하는 것이기 때문에, 평생 가치를 의미하는 LTV와는 개념적으로 다른 부분이 있었습니다. 이렇게 문제점이 있던 지표들을 하나로 통합하고 개선하는 것을 목표로 작업을 시작하게 되었습니다.

위와 같은 문제를 해결하기 위해, 우선은 LTV 측정 방식에 대해 서베이를 진행하였습니다. 몇몇 서베이를 바탕으로 저희 모바일 게임에 적용해 볼 수 있는 부분은 적용해보았고, 이 중에 나왔던 여러 결과들을 정교화하여 저희의 지표 제공 서비스 상황에 맞게 예상 수익을 추정해 보았습니다. (미리 살짝 말씀 드리자면, 개선된 지표는 평생 가치를 예측하는 LTV의 개념보다는 각 기간별 예상 수익을 추정하는 것과 좀 더 가까워, 지표의 명칭도 “예상 수익” 지표로 변경하게 되었습니다!) 



## 고객생애가치(LTV)

모바일 게임에서의 고객 생애 가치 LTV(Life Time Value)란, 유저가 앱을 사용하는 동안 발생되는 이익을 뜻하며 CLV(Customer Lifetime Value)라고 표현하기도 합니다. 일반적으로 LTV 예측을 위해서는 유저의 리텐션과 매출을 각각 예측하여 곱의 형태로 표현하는 것이 기본인데요.

리텐션 예측의 경우, 초반 리텐션 데이터가 후반에도 반복된다는 가정으로, 가령 1주일 리텐션이 $$\frac{1}{2}$$ 이라면 2주일 리텐션은 $$(\frac{1}{2})^2$$ 과같이 단순하게 추정할 수도 있고, 멱함수나 유리함수로 피팅하여 후반 리텐션 값을 추정하는 함수 피팅 방식을 사용하여 나타내기도 합니다. 그 밖에도 확률 분포인 기하 분포와 베타 분포에 의거하여 리텐션 함수를 추정하기도 합니다.

매출 예측의 경우, 과거 결제 데이터를 이용하여 평균지불금액(ARPU)나 일평균지불금액(ARPDAU)를 추정합니다. 이때 추정은 리텐션과 비슷하게 파워함수와 같은 잘 알려진 특정 함수 형태로 피팅하여 추정하거나 특정 기간 동안의 실측값이 추후에도 반복될 것을 가정하여 그 값을 고정하여 사용하기도 합니다.

이와 같이 리텐션과 매출을 각각 예측하고 곱하여 LTV를 예측하는 방식 이외에도, LTV와 관련 있는 피쳐들을 활용하여 기계 학습 기반으로 모델링 하는 방식도 많이 소개되어 있었습니다. 예를 들면, RFM(Recency-Frequency-Monetary, 최근 결제-결제 빈도-결제액) 피쳐를 활용하여 유저 개개인의 LTV 값을 예측할 수도 있고, 분류 문제로 접근하여 세그먼트별(Low LTV, Mid LTV, High LTV) 집단을 예측할 수도 있습니다.



## 예상 수익 추정

서베이에서 알게 된 다양한 LTV 예측 이론들을 저희 게임에도 적용하여 보기 위해, 데이터센터내에서 수집하고 있는 데이터 중 필요한 데이터를 추출 및 가공하였습니다. 먼저 최근 1년간 일자별로 접속한 유저들의 향후 $$x$$일간 접속 여부 정보와 매출 정보를 모두 추출하였습니다.

**학습에 사용할 데이터 추출하기**

게임 론칭 초반부터 바로 어제까지 쌓인 모~든 데이터를 활용하여 오늘 접속한 유저의 예상 수익을 추정해본다면, 보다 많은 데이터로 정확하게 추정할 수도 있을 것입니다. 그러나 론칭한지 다소 오래된 안정기에 접어든 게임이라면, 론칭 초반의 패턴과 달라 괜히 불필요한 데이터를 모델에 사용하게 되는, 즉, 모델 노후화 문제가 생길 수도 있습니다. 또한 너무 많은 데이터를 추출하고 모델에 사용하게 되어 생기는 연산량 문제도 무시 못 하겠죠?

이에 학습 기간에 따른 추정의 정확성과 로직별 소요시간 등을 절충하여 최근 30일 정도의 접속 유저 데이터를 모델에 사용하되, 30일 보다 부족한 경우는 부족한 대로 사용할 수 있도록 로직을 변경하였습니다. 또한 론칭 초반 상황을 가정하여, 모델 학습에 필요한 최소 기간을 7일로 하였고, 론칭 후 7일만 지나면 사용자가 바로 예상 수익 지표를 확인할 수 있게끔 신속한 지표 제공이 가능하도록 하였습니다. 이때 정확성은 조금 떨어지지만, 이후 시간이 지남에 따라 학습 데이터가 점차 누적되고 모델이 계속해서 정교해지게 됩니다. 

추가적으로 로그에 남는 신규 유저인지 아닌지에 대한 정보 또는 광고매체 유입 여부와 같은 특정 정보와 내부 로직으로 적재되고 있는 유저 세그먼트 정보를 활용하여, 그룹별로 예상 수익을 살펴볼 수 있었습니다. 단순히 전체 유저 리텐션의 평균을 구하는 것 이외에도 그룹별 예상 수익을 구하여 조금 더 활용성 높은 정보를 전달할 수 있었습니다. 

**리텐션 추정을 위한 데이터 전처리**

사실 일반적으로 $$x$$일차 리텐션의 의미는 오늘 들어온 유저들을 100%로 하여 3일차에는 그 중 몇 %가 남았는지, 또 7일차에는 그 중 몇 %가 남았는지와 같이, 시간에 따라 감소하는 형태로 표현되곤 하는데요. 저희가 추출한 데이터는 일자별로 접속한 유저들의 향후 $$x$$일간 접속 여부로써 시간에 따른 증가와 감소가 혼합되어 있었습니다. 예를 들어, 20.01.01에 접속한 유저(100%)들 각각의 20.01.02 접속 여부 & 20.01.03 접속 여부 & ... & 20.02.29 접속 여부 를 집계해 본다면, 20.01.02에 50%이지만 20.01.03에 55%가 될 수도 있겠죠.

 



<p align="center">
<img src="/assets/works/mobile_mkt/ltv1.PNG" style="width:10in" />
    [그림1] (왼)꾸준히 감소하는 형태의 일반적인 잔존율 (오)증가와 감소가 혼합된 우리의 잔존율 그래프
</p>

이는 실제 서비스 상황을 맞추기 위해 데이터 추출에 과부하를 주지 않는 선에서 모델링 작업을 진행하기 위함입니다. (정확한 추정도 중요하지만, 연속 접속을 구하기 위한 연산량이 너무 많아 지표가 나오는데 오래 걸리거나 과한 리소스를 사용하여 다른 서비스에 영향을 주게 된다면 문제가 생기겠죠?!) 따라서 추정 결과의 정확성을 위해 약간의 데이터 전처리가 필요했습니다. 리텐션이 전날보다 상승한 경우, 이전 시점까지 리텐션의 최소값으로 대체하여 시간에 따라 감소하는 형태가 되게 처리하였고 함수 피팅의 정확성이 높아지도록 하였습니다.

 

<p align="center">
<img src="/assets/works/mobile_mkt/ltv2.PNG" style="width:10in" />
[그림2] (왼)전체 유저 (오)특정 그룹에 속한 유저, 15개의 특정 날짜(15개의 line 그래프)에 접속한 유저들의 시간에 따른 리텐션 변화, 완만하게 감소하는 형태가 아닌 요동치는 모습이라 전처리가 필요함. 그룹별로도 양상이 매우 다른 것을 확인할 수 있음.
</p>

**(드디어!) 리텐션 추정하기**

리텐션 추정은 함수 피팅 값과 sBG(shifted Beta Geometric) 모델 값을 이용하여 추정하였습니다. 함수 피팅의 경우, 유저의 리텐션과 비슷하게 감소하는 형태를 갖는 분수 함수 개형을 사용합니다. 분수 함수의 파라미터는 Non-linear Least Square 방식을 이용하여 실측값과 분수 함수 피팅 값의 오차가 적어지도록 하는 최적의 값으로 추정합니다. sBG 모델의 경우는 기하/베타 분포를 이용하여 리텐션을 구하는 방식입니다. 확률분포에 의거하여 구하기 때문에 리텐션의 개형을 모르는 상태에서도 사용이 가능합니다. 저희 모바일 게임 기준으로, 함수 피팅 값은 실측값보다 under-fitting 되는 경향이 있었으며 가끔씩 아예 피팅이 안 되는 경우도 발생했고, sBG 모델 값의 경우 실측값보다 over-fitting 되는 경향이 있었기에 두 가지 방식을 모두 사용하여 리텐션을 추정하였습니다. sBG 모델의 자세한 내용은 Appendix로 추가합니다.

**매출 추정하기**

앞서 리텐션 추정의 경우에는, 특정 일자에 접속한 유저들이 시간이 지날수록 이탈하게 되어 감소하는 형태를 보이므로 특정 함수로 피팅하는 방식을 이용할 수 있었는데요. 매출의 경우에는 대규모 업데이트 시기와 같은 특정 날짜에 따라서 값의 편차가 매우 컸기 때문에, 특정 함수로 피팅하는 방식을 사용할 수 없었습니다. 이렇듯 시점에 따라 값의 변화가 매우 컸던 매출의 경우, 이러한 변동성에 강건해질 수 있도록 ARPDAU의 평균을 구하는 방식으로 추정을 대체하였습니다.

**최종 추정치와 신뢰구간 계산하기**

위에서 추정된 리텐션과 매출을 이용하여, 최종 예상 수익 지표는 다음과 같이 계산합니다!

$$\hat{예상수익} = \hat{매출} * \sum_{0≤t≤period} \hat{리텐션} $$

이 때, period는 30/90/180/365일로 나누어 단기/중기/장기 예상 수익 값을 제공하게 하였고, 앞서 말씀드렸듯 전체 유저의 예상 수익 이외에도 신규 유저와 같이 그룹별로 추정 값을 추가 제공하여 활용성이 더욱더 증대될 수 있도록 하였습니다. 또한 단순히 하나의 값으로 예상 수익을 추정하기 보다는 리텐션과 매출의 표준 오차를 활용하여 99% 예상 수익 신뢰구간을 계산하여 함께 제공하였습니다. (신뢰구간 세부 계산 식은 Appendix로 추가합니다.)



<p align="center">
<img src="/assets/works/mobile_mkt/ltv3.PNG" style="width:10in" />
[그림3] 개선된 예상 수익 지표 기획안 일부 발췌
</p>

## 개선 결과 

사실 기존의 평생 수익을 예측하는 관점인 LTV 지표라는 용어와 달리, 개선된 지표는 향후 $$x$$일 간 발생할 예상 수익을 추정하는 관점인데요. (LTV에서 예상 수익으로 용어를 변경한 이유) 그렇지만 이와 같은 개선을 통해 기간별 그룹별로 추정치를 제공하여 좀 더 활용성을 높이고자 했습니다. 또한 예상 수익 추정은 기존 LTV 지표 대비 오차율을 절반 이상 감소시켜 지표의 정확성도 증대시켰습니다. (각기 다른 방식으로 계산된 추정치이기에 180일 추정으로 기준을 통일하여 평균 오차 비율을 $$ \frac{ \|실측치-추정치\| }{실측치} * 100 $$으로 계산했을 때, 기존대비 50% → 18%로 대폭 감소)

<p align="center">
<img src="/assets/works/mobile_mkt/ltv4.PNG" style="width:10in" />
[그림4] 접속일별 기존 지표와 개선된 지표 비교, 빨간 점선 박스 안의 그래프가 이번 작업 내용인데 많이 개선된 것을 확인할 수 있습니다!
</p>

## 요약

끝으로 예상 수익 추정 작업 내용을 요약 정리하며 포스팅을 마무리합니다! 

- 데이터
  - 매일 집계되는 접속 유저들을 30일간 추적 (30일 보다 부족하면 부족한대로 사용, 단, 최소 7일은 필요함)
  - 30일 간의 접속 유저를 활용함 (30일 보다 부족하면 부족한대로 사용)
- 모델
  - 예상 수익 추정 → ARPU(결제) 추정 + Retention(잔존율) 추정
    - ARPU는 ARPDAU의 평균으로 추정
    - Retention은 함수 피팅과 sBG 방식으로 추정
- 결과
  - 전체 & 세그먼트(신규, 광고매체 등) 별 30/90/180/365일 예상 수익 추정치

## Appendix.

**sBG Model 설명**

- 가정

  - $$Θ$$: 유저의 이탈 확률, $$T=1$$ : 초기 시점

    - $$t$$ 시점에서 유저의 이탈 확률:
      $$
      \begin{aligned}
      P( T=t | Θ ) = Θ \times (1-Θ)^{t-1}
      \end{aligned}
      $$

    - $$t$$ 시점에서 유저의 생존 확률:
      $$
      \begin{aligned}
      S( T=t | Θ ) = (1-Θ)^t
      \end{aligned}
      $$

    - 유저의 이탈 확률 $$Θ$$는 베타 분포를 따름:
      $$
      \begin{aligned}
      f( Θ | α , β ) = \frac{Θ^{α-1} \times (1-Θ)^{β-1}}{Β(α,β)}
      \end{aligned}
      $$
      

- 모델 설명

  - 모든 기간에 대해서 유저의 이탈 확률($$Θ$$)을 구할 수 없기 때문에, $$t$$시점에서의 유저의 이탈확률과 생존확률은 계산이 불가능

  - 따라서 $$Θ$$가 베타분포를 따른다는 가정을 이용하면 $$t$$시점에서의 유저의 이탈 확률과 생존확률은 다음과 같이 나타낼 수 있음
    $$
    \begin{aligned}
    P( T=t | α , β ) = \frac{Β(α+1,β+t-1)}{Β(α,β)}, \ \ \ \ \ 
    S( T=t | α , β ) = \frac{Β(α,β+t)}{Β(α,β)}
    \end{aligned}
    $$

  - $$B(α , β) = Γ(α) * \frac{Γ(β)}{Γ(α+β)}$$ 와$$ Γ(α) = (α-1)!$$ 을 이용하면 유저의 $$t$$시점에서의 이탈확률은 다음과 같이 간단하게 나타낼 수 있음
    $$
    \begin{aligned}
    P(T=1 | α , β ) = \frac{α}{α+β}, \ \ \ \ \ 
    P(T=t | α , β ) = \frac{β + t - 2}{α + β + t - 1} \times P(T=t-1 | α , β ) \ \ \ if \ \ \ t=2,3,4.....
    \end{aligned}
    $$

  - $$t$$시점에서의 유저의 생존 확률을 이용하면 t시점에서의 유저의 잔존 확률은 다음과 같이 정의하며, 잔존 확률은 유저의 생존 확률 계산에 사용
    $$
    \begin{aligned}
    r_t = \frac{S(t)}{S(t-1)} = \frac{β+t-1}{α+β+t-1} , \ \ \ \ \ S(t) = r_t \times S(t-1)
    \end{aligned}
    $$

  - MLE를 사용한 $$α$$ , $$β$$ 추정 방법

    - $$α$$ , $$β$$ 에 대한 우도함수는 다음과 같이 나타냄 

    - $$n_i$$ : $$i$$ 시점에서의 이탈한 유저 수
      $$
      \begin{equation}
      L( α , β | data ) = ∏_{1≤i≤t} P(T=i | α , β )^{n_i} \times S( t | α , β )^{N - ∑_{1≤i≤t^{n_i}}} \\
      LL( α , β | data ) = ∑ n_i \times log( P(T=i | α , β ) ) + (N - ∑ n_i) \times log( S( t | α , β ) ) \\
      \hat{α}, \hat{β} = argmax_{α , β} ( LL( α , β | data ) )
      \end{equation}
      $$

  - $$\hat{α}$$, $$\hat{β}$$를 이용하여 유저의 모든 시점의 생존 확률을 계산하여 Retention 함수로 사용
    $$
    \begin{equation}
    S(T = 1) = \frac{β}{α+β}, \ \ \ \ \ 
    S(T = t) = r_t * S(T = t-1) = \frac{β + t -1}{α + β + t - 1} \times S(T = t-1)
    \end{equation}
    $$

- 참고 자료

  - [HOW TO PROJECT CUSTOMER RETENTION](https://faculty.wharton.upenn.edu/wp-content/uploads/2012/04/Fader_hardie_jim_07.pdf)

**예상 수익 지표 신뢰구간**

- $$σ_{\hat{ARPU}}$$ = ARPU 추정에 사용된 ARPDAU들의 표준 오차
  
- $$n$$ : 표준 오차 계산에 사용된 데이터의 갯수
  
- 리텐션 함수: $$R(t) = Average(s(t) + c(t))$$

  - $$s(t)$$ : shifted Beta Geometric Model
  - $$c(t)$$ : Curve fitting 함수 (분수 함수) $$= \frac{d}{b \times t^a + c} $$
  - $$R(t, date)$$ : 특정 유입일(date)에 유입된 유저의 잔존율 피팅 함수
    - shifted Beta Geometric Model fitting 방식과 Curve fitting 방식의 평균값

- $$σ_{Retention, t} $$ 는 아래와 같이 계산
  $$
  \begin{equation}
  Var(f(t)) = Var( \frac{s(t) + c(t)}{2} ) =\frac{Var(s(t)) + Var(c(t))}{4}\ \ (s(t)와 \ c(t)는 \ 독립), \ \ \ \ \ 
  σ_{Retention, t} = \frac{\sqrt{Var(s(t)) + Var(c(t))}}{2} \\
  Var(R(t)\times\hat{ARPU} ) = Var(R(t)\times Var(\hat{ARPU} ) + Var(R(t)\times[E(\hat{ARPU} )]^2 + Var(\hat{ARPU})\times[E(R(t))]^2 \ \ (R(t)와 \ \hat{ARPU}는 \ 독립) \\
  E(R(t))^2 = \frac{E(c(t))^2+E(s(t))^2}{4} + \frac{E(c(t))\times E(s(t))}{2}
  \end{equation}
  $$

- 따라서 최종 신뢰구간은 아래와 같음
  $$
  (LTV_{lower} , LTV_{upper}) = ( ∑\hat{ARPU} \times R(t) - 2.58 \times \sqrt\frac{Var(R(t)\times \hat{ARPU}}{n} , ∑\hat{ARPU} \times R(t) + 2.58 \times \sqrt\frac{Var(R(t)\times \hat{ARPU}}{n} )
  $$
  

 

